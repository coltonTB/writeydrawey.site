@font-face {
  font-family: 'Relative';
  font-weight: normal;
  src: url("/fonts/relative-book.eot");
  /* IE9 Compat Modes */
  src: url("/fonts/relative-book.eot?#iefix") format("embedded-opentype"), url("/fonts/relative-book.woff2") format("woff2"), url("/fonts/relative-book.woff") format("woff"), url("/fonts/relative-book.ttf") format("truetype");
  /* Safari, Android, iOS */ }

@font-face {
  font-family: 'Relative';
  font-style: italic;
  font-weight: normal;
  src: url("/fonts/relative-italic.eot");
  /* IE9 Compat Modes */
  src: url("/fonts/relative-italic.eot?#iefix") format("embedded-opentype"), url("/fonts/relative-italic.woff2") format("woff2"), url("/fonts/relative-italic.woff") format("woff"), url("/fonts/relative-italic.ttf") format("truetype");
  /* Safari, Android, iOS */ }

@font-face {
  font-family: 'Relative Mono';
  font-weight: normal;
  src: url("/fonts/relative-mono-11-pitch.eot");
  /* IE9 Compat Modes */
  src: url("/fonts/relative-mono-11-pitch.eot?#iefix") format("embedded-opentype"), url("/fonts/relative-mono-11-pitch.woff2") format("woff2"), url("/fonts/relative-mono-11-pitch.woff") format("woff"), url("/fonts/relative-mono-11-pitch.ttf") format("truetype");
  /* Safari, Android, iOS */ }

html {
  font-size: 22px;
  color: var(--black-ln); }
  @media (max-width: 600px) {
    html {
      font-size: 18px; } }

body {
  margin: 0;
  color: var(--black-ln);
  font-family: 'Relative', 'Helvetica', sans-serif;
  font-weight: normal;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale; }

h1, h2, h3, h4, p {
  margin: 0;
  padding: 0;
  font-weight: normal; }

h1 {
  font-size: 2.4rem;
  line-height: 1.4em;
  margin-bottom: 1em;
  text-transform: lowercase; }

h2 {
  font-size: 1.7rem;
  margin-bottom: 0.4em; }

h3 {
  font-size: 1.15rem; }

p {
  font-size: 1rem;
  margin: 0;
  padding-bottom: 0.5em; }
  p:nth-of-type(n+2) {
    text-indent: 1em; }

a {
  color: var(--black-ln);
  text-decoration: none; }

.italic {
  font-style: italic; }

.uppercase {
  text-transform: uppercase;
  font-weight: 500;
  letter-spacing: 0.06em; }

.mono {
  font-family: 'Relative Mono'; }

.strikethrough {
  text-decoration: line-through; }

.color-blk {
  color: var(--black-ln); }

.color-gray {
  color: var(--gray); }

.nav .logo {
  height: 2rem;
  position: fixed;
  left: 0;
  top: 0;
  padding: 1.4rem; }

.nav .links, .nav .text {
  position: fixed;
  top: 0;
  right: 0;
  text-align: right;
  padding: 0.8rem 1.4rem; }
  .nav .links h2, .nav .text h2 {
    margin: 0; }
  .nav .links span:not(.nohover):hover, .nav .links a:hover, .nav .text span:not(.nohover):hover, .nav .text a:hover {
    text-decoration: underline;
    cursor: pointer; }

.nav .text {
  padding: 1.2rem 1.4rem; }

.join .input-container {
  max-width: 30rem;
  text-align: left;
  margin-bottom: 1rem; }
  .join .input-container input, .join .input-container h3 {
    display: inline-block;
    white-space: nowrap; }

.join .input-container-flex {
  display: flex;
  align-items: center;
  margin-bottom: 0.4rem; }

.join .subtext {
  width: 100%;
  position: absolute;
  left: 0;
  top: 2rem;
  text-align: center;
  font-family: 'Relative Mono';
  font-size: 0.65rem; }

#main {
  padding: 1.2rem 0;
  height: 100vh;
  box-sizing: border-box; }
  @media (max-size: 600px) {
    #main {
      padding: 0.6rem 0; } }

.content-container {
  height: 100%;
  padding: 4.4rem 1.4rem 0;
  box-sizing: border-box; }

.full-height {
  height: 100%; }

.bottom-margin {
  align-items: center;
  box-sizing: border-box;
  display: flex;
  justify-content: center;
  padding: 1.2rem 1.4rem 0;
  width: 100%; }
  .bottom-margin button {
    font-size: 1rem;
    margin: 0 0 0 6vw;
    padding: 0.6rem 1em; }

.flex-container {
  height: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  text-align: center; }

.rel {
  position: relative; }

.strikethrough {
  text-decoration: line-through; }

.center {
  text-align: center; }

.home .logo {
  height: 6rem; }

.rules {
  max-width: 23rem; }
  .rules .illustration {
    position: absolute;
    right: 0;
    bottom: 0;
    padding: 2rem 4rem;
    width: 16rem; }
    .rules .illustration svg {
      width: 100%; }

.playing h2, .playing h3 {
  flex: 1;
  text-align: left; }

.playing .input-wrapper {
  flex: 1;
  text-align: left;
  margin: 0; }

.waiting button {
  margin: 1rem; }

.waiting .player--notready {
  font-style: italic; }

.game-over {
  width: 60%;
  margin: 0 auto; }
  @media (max-width: 600px) {
    .game-over {
      width: 100%; } }
  .game-over img {
    width: 30rem;
    height: 18rem;
    background: var(--lightgray);
    object-fit: contain;
    object-position: center;
    padding: 1rem;
    box-sizing: border-box; }
    @media (max-width: 600px) {
      .game-over img {
        width: 100%; } }
  .game-over--section {
    margin: 4rem 0; }
    .game-over--section:last-of-type {
      margin-bottom: 10rem; }

svg {
  height: 100%; }

button {
  background: none;
  border: none;
  color: var(--black-ln);
  padding: 1em 2em;
  font-size: 1.2em;
  margin: 1em;
  cursor: pointer;
  font-family: 'Relative Mono';
  margin-top: 2em;
  text-transform: lowercase;
  position: relative; }
  button:hover svg {
    transform: scale(1.02); }
  button:focus {
    outline: none; }
  button:active svg, button:focus svg {
    transform: scale(1); }
  button svg {
    width: 100%;
    height: 100%;
    left: 0;
    top: 0;
    position: absolute; }
  button span.text {
    display: inline-block;
    transform: rotate(-1deg); }

.input-wrapper {
  flex: 1;
  margin: 0 1em;
  position: relative; }
  .input-wrapper input {
    border: none;
    border-bottom: 0.05rem solid var(--black-ln);
    color: var(--black-ln);
    font-size: 1.3rem;
    width: 100%; }

input {
  border-radius: 0; }

#drawingCanvas {
  width: 100%;
  border: none;
  flex: 1;
  background: var(--lightgray);
  margin-top: 3.2rem; }

img.playerDrawing {
  flex: 1;
  max-height: 100%;
  max-width: 100%;
  object-fit: contain;
  scale: 0.85; }

ol {
  padding-left: 1.6em;
  margin: 0.6em 0; }

